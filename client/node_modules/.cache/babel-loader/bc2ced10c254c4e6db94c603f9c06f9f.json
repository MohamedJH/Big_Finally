{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mohamed/Bureau/Go my code/Big Finally/client/src/Components/Registre Component/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuora } from \"@fortawesome/free-brands-svg-icons\";\nimport \"./Registre.css\";\nexport default function Register() {\n  _s();\n\n  const [countriesList, setCountriesList] = useState([]);\n  const [statesList, setStatesList] = useState([]);\n  useEffect(() => axios.get(\"https://raw.githubusercontent.com/dr5hn/countries-states-cities-database/master/countries%2Bstates%2Bcities.json\").then(res => {\n    setCountriesList(res.data);\n  }), [countriesList]);\n\n  const handleChange = e => {\n    const country = e.target.value;\n    const listState = countriesList.find(el => el.name === country);\n    setStatesList(listState.states);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \" text justify-content-md-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"Register-page\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          className: \"d-flex flex-column align-items-center text-center\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            size: \"6x\",\n            color: \"teal\",\n            icon: faQuora\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridFirstName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"\",\n                  placeholder: \"Entrer votre Nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridLastName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Pr\\xE9nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"\",\n                  placeholder: \"Entrer votre prenom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formGridAddress1\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Addresse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                name: \"\",\n                placeholder: \"Entrer votre Adresse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridCity\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Pays\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  name: \"\",\n                  defaultValue: \"Choose...\",\n                  onChange: handleChange,\n                  children: countriesList.map((country, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: country.name\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 61\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridState\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"State\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  name: \"\",\n                  defaultValue: \"Choose...\",\n                  children: statesList.map((state, j) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: state.name.split(\" \")[0]\n                  }, j, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 56\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridZip\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Zip\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  name: \"\",\n                  placeholder: \"Entrer votre email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Mot De Passe\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  name: \"\",\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              id: \"formGridCheckbox\",\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                label: \"Check me out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              type: \"submit\",\n              className: \"Button\",\n              children: \"Enregistrer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"lYcm6JJ0Gv7C8gQWha0BJzy9MSM=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/home/mohamed/Bureau/Go my code/Big Finally/client/src/Components/Registre Component/Register.js"],"names":["React","useState","useEffect","axios","Container","Row","Col","Button","Card","Form","FontAwesomeIcon","faQuora","Register","countriesList","setCountriesList","statesList","setStatesList","get","then","res","data","handleChange","e","country","target","value","listState","find","el","name","states","map","i","state","j","split"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faQuora } from \"@fortawesome/free-brands-svg-icons\";\n\nimport \"./Registre.css\";\n\nexport default function Register() {\n    const [countriesList, setCountriesList] = useState([]);\n    const [statesList, setStatesList] = useState([]);\n\n\n  useEffect(() =>\n      axios\n        .get(\"https://raw.githubusercontent.com/dr5hn/countries-states-cities-database/master/countries%2Bstates%2Bcities.json\")\n        .then((res) => {\n            setCountriesList(res.data)\n        }),\n    [countriesList]\n  );\n\n    const handleChange = (e)=>{\n       const country = e.target.value; \n       const listState   = countriesList.find((el)=> el.name===country)\n       setStatesList(listState.states) \n\n    }     \n\n\n  return (\n    <Container>\n      <Row className=\" text justify-content-md-center mt-5\">\n        <Card className=\"Register-page\">\n          <Card.Header className=\"d-flex flex-column align-items-center text-center\">\n            <FontAwesomeIcon size=\"6x\" color=\"teal\" icon={faQuora} />\n            {/* <Card.Title className=\" mt-3\">Se connecter</Card.Title> */}\n          </Card.Header>\n\n          <Card.Body>\n            <Form>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridFirstName\">\n                  <Form.Label>Nom</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"\"\n                    placeholder=\"Entrer votre Nom\"\n                  />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridLastName\">\n                  <Form.Label>Prénom</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"\"\n                    placeholder=\"Entrer votre prenom\"\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Group controlId=\"formGridAddress1\">\n                <Form.Label>Addresse</Form.Label>\n                <Form.Control name=\"\" placeholder=\"Entrer votre Adresse\"/>\n              </Form.Group>\n\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridCity\">\n                  <Form.Label>Pays</Form.Label>\n                  <Form.Control as=\"select\" name=\"\" defaultValue=\"Choose...\" onChange={handleChange}>\n                        {\n                            countriesList.map((country,i)=> <option key={i}>{country.name}</option>)\n                        }\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridState\">\n                  <Form.Label>State</Form.Label>\n                  <Form.Control as=\"select\" name=\"\" defaultValue=\"Choose...\">\n                        {\n                            statesList.map((state,j)=> <option key={j}>{state.name.split(\" \")[0]}</option>)\n                        }\n                  </Form.Control>\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                  <Form.Label>Zip</Form.Label>\n                  <Form.Control type=\"text\" name=\"\" />\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridEmail\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    name=\"\"\n                    placeholder=\"Entrer votre email\"\n                  />\n                </Form.Group>\n\n                <Form.Group as={Col} controlId=\"formGridPassword\">\n                  <Form.Label>Mot De Passe</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"\"\n                    placeholder=\"Password\"\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Group id=\"formGridCheckbox\">\n                <Form.Check type=\"checkbox\" label=\"Check me out\" />\n              </Form.Group>\n\n              <Button variant=\"info\" type=\"submit\" className=\"Button\">\n                Enregistrer\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Row>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}