{"ast":null,"code":"import{GET_QUESTIONS,ADD_QUESTIONS}from'../actionType.js';import axios from\"axios\";export var getQuestions=function getQuestions(){return function(dispatch){axios.get(\"/api/questions/all\").then(function(res){dispatch({type:GET_QUESTIONS,payload:res.data});});};};export var removeQuestion=function removeQuestion(id){return function(dispatch){axios.delete(\"/api/questions/\".concat(id)).then(function(res){return dispatch(getQuestions());}).catch(function(err){return alert(err);});};};export var editQuestionById=function editQuestionById(id,inputData){return function(dispatch){axios.put(\"api/questions/\".concat(id),inputData).then(function(res){return dispatch(getQuestions());});};};export var addQuestion=function addQuestion(newQuestion){return function(dispatch){axios.post(\"/api/questions/addQuestion\",newQuestion).then(function(res){return dispatch({type:ADD_QUESTIONS,payload:res.data// a newUser object\n});}).catch(function(err){return alert(\"ADD ERROR \");});};};","map":{"version":3,"sources":["/home/mohamed/Bureau/Go my code/Big Finally/client/src/js/actions/questionaction.js"],"names":["GET_QUESTIONS","ADD_QUESTIONS","axios","getQuestions","dispatch","get","then","res","type","payload","data","removeQuestion","id","delete","catch","err","alert","editQuestionById","inputData","put","addQuestion","newQuestion","post"],"mappings":"AAAA,OAASA,aAAT,CAAuBC,aAAvB,KAA2C,kBAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAI,CAC5B,MAAO,UAACC,QAAD,CAAY,CACfF,KAAK,CAACG,GAAN,CAAU,oBAAV,EAAgCC,IAAhC,CAAqC,SAACC,GAAD,CAAO,CACxCH,QAAQ,CAAC,CACLI,IAAI,CAAER,aADD,CAELS,OAAO,CAAEF,GAAG,CAACG,IAFR,CAAD,CAAR,CAIH,CALD,EAOH,CARD,CASH,CAVM,CAYP,MAAO,IAAMC,CAAAA,cAAc,CAAE,QAAhBA,CAAAA,cAAgB,CAACC,EAAD,CAAM,CAC/B,MAAO,UAACR,QAAD,CAAY,CACfF,KAAK,CACJW,MADD,0BAC0BD,EAD1B,GAECN,IAFD,CAEM,SAACC,GAAD,QAAQH,CAAAA,QAAQ,CAACD,YAAY,EAAb,CAAhB,EAFN,EAGCW,KAHD,CAGO,SAACC,GAAD,QAAOC,CAAAA,KAAK,CAACD,GAAD,CAAZ,EAHP,EAIH,CALD,CAMH,CAPM,CAWP,MAAO,IAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACL,EAAD,CAAKM,SAAL,QAAmB,UAACd,QAAD,CAAc,CAC7DF,KAAK,CAACiB,GAAN,yBAA2BP,EAA3B,EAAiCM,SAAjC,EAA4CZ,IAA5C,CAAiD,SAACC,GAAD,QAASH,CAAAA,QAAQ,CAACD,YAAY,EAAb,CAAjB,EAAjD,EACH,CAF+B,EAAzB,CAIP,MAAO,IAAMiB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,WAAD,QAAiB,UAACjB,QAAD,CAAc,CACtDF,KAAK,CACFoB,IADH,CACQ,4BADR,CACsCD,WADtC,EAEGf,IAFH,CAEQ,SAACC,GAAD,QACJH,CAAAA,QAAQ,CAAC,CACPI,IAAI,CAAEP,aADC,CAEPQ,OAAO,CAAEF,GAAG,CAACG,IAAM;AAFZ,CAAD,CADJ,EAFR,EAQGI,KARH,CAQS,SAACC,GAAD,QAASC,CAAAA,KAAK,CAAC,YAAD,CAAd,EART,EASH,CAV0B,EAApB","sourcesContent":["import { GET_QUESTIONS,ADD_QUESTIONS} from '../actionType.js'\nimport axios from \"axios\"\n\nexport const getQuestions = ()=>{\n    return (dispatch)=>{\n        axios.get(\"/api/questions/all\").then((res)=>{\n            dispatch({\n                type: GET_QUESTIONS,\n                payload: res.data,\n            })\n        })\n\n    }\n}\n\nexport const removeQuestion =(id)=>{\n    return (dispatch)=>{\n        axios\n        .delete(`/api/questions/${id}`)\n        .then((res)=> dispatch(getQuestions()))\n        .catch((err)=>alert(err))\n    }\n}\n\n\n\nexport const editQuestionById = (id, inputData) => (dispatch) => {\n    axios.put(`api/questions/${id}`, inputData).then((res) => dispatch(getQuestions()));\n};\n\nexport const addQuestion = (newQuestion) => (dispatch) => {\n    axios\n      .post(\"/api/questions/addQuestion\", newQuestion)\n      .then((res) =>\n        dispatch({\n          type: ADD_QUESTIONS,\n          payload: res.data, // a newUser object\n        })\n      )\n      .catch((err) => alert(\"ADD ERROR \"));\n};"]},"metadata":{},"sourceType":"module"}