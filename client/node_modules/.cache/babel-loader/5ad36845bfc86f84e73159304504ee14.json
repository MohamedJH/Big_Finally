{"ast":null,"code":"import _toConsumableArray from\"/home/mohamed/Bureau/Go my code/Big Finally/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/mohamed/Bureau/Go my code/Big Finally/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{GET_QUESTIONS,ADD_QUESTIONS}from\"../actionType\";var initState={questions:[],isLoading:true};export var questionReducer=function questionReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case GET_QUESTIONS:return _objectSpread(_objectSpread({},state),{},{isLoading:false,questions:action.payload});case ADD_QUESTIONS:return _objectSpread(_objectSpread({},state),{},{questions:[action.payload].concat(_toConsumableArray(state.questions))});default:return state;}};","map":{"version":3,"sources":["/home/mohamed/Bureau/Go my code/Big Finally/client/src/js/reducers/questionreducer.js"],"names":["GET_QUESTIONS","ADD_QUESTIONS","initState","questions","isLoading","questionReducer","state","action","type","payload"],"mappings":"yVAAA,OAAUA,aAAV,CAAwBC,aAAxB,KAA4C,eAA5C,CAGA,GAAMC,CAAAA,SAAS,CAAG,CACdC,SAAS,CAAC,EADI,CAEdC,SAAS,CAAC,IAFI,CAAlB,CAKA,MAAO,IAAMC,CAAAA,eAAe,CAAE,QAAjBA,CAAAA,eAAiB,EAA4B,IAA3BC,CAAAA,KAA2B,2DAArBJ,SAAqB,IAAXK,CAAAA,MAAW,2CACtD,OAAOA,MAAM,CAACC,IAAd,EACI,IAAMR,CAAAA,aAAN,CACA,sCAAWM,KAAX,MAAiBF,SAAS,CAAC,KAA3B,CAAiCD,SAAS,CAACI,MAAM,CAACE,OAAlD,GACA,IAAKR,CAAAA,aAAL,CACA,sCAAYK,KAAZ,MAAmBH,SAAS,EAAGI,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACH,SAA5B,EAA5B,GACA,QACA,MAAOG,CAAAA,KAAP,CANJ,CAQH,CATM","sourcesContent":["import {  GET_QUESTIONS,ADD_QUESTIONS} from \"../actionType\"\n\n\nconst initState = {\n    questions:[],\n    isLoading:true\n}\n\nexport const questionReducer =(state=initState,action) => {\n    switch(action.type){\n        case  GET_QUESTIONS:\n        return {...state,isLoading:false,questions:action.payload};\n        case ADD_QUESTIONS:\n        return { ...state, questions: [action.payload, ...state.questions] };\n        default:\n        return state\n    }\n}"]},"metadata":{},"sourceType":"module"}